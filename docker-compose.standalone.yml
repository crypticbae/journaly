version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: journaly-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: journaly_user
      POSTGRES_PASSWORD: journaly_password_2024
      POSTGRES_DB: journaly_db
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    networks:
      - journaly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U journaly_user -d journaly_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Journaly Trading Journal App - ALLES AUTOMATISCH!
  app:
    image: node:20-alpine
    container_name: journaly-app
    restart: unless-stopped
    working_dir: /app
    ports:
      - "5885:5885"
    environment:
      # Database
      DATABASE_URL: "postgresql://journaly_user:journaly_password_2024@postgres:5432/journaly_db?schema=public"
      
      # NextAuth
      NEXTAUTH_URL: "http://localhost:5885"
      NEXTAUTH_SECRET: "journaly-super-secret-key-change-in-production-32chars"
      
      # App Settings
      NODE_ENV: "production"
      APP_URL: "http://localhost:5885"
      PORT: "5885"
      
      # Admin
      ADMIN_EMAIL: "admin@journaly.com"
      
      # Email (Optional)
      EMAIL_SERVER_HOST: ""
      EMAIL_SERVER_PORT: "587"
      EMAIL_SERVER_USER: ""
      EMAIL_SERVER_PASSWORD: ""
      EMAIL_FROM: "noreply@journaly.com"
      
      # Python path for node-gyp
      PYTHON: "/usr/bin/python3"
      
    networks:
      - journaly-network
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - app_uploads:/app/uploads
      - app_data:/app/data
    command: |
      sh -c "
        echo '🚀 Starting Journaly Trading Journal...' &&
        
        # Check if app is properly installed (node_modules with next)
        if [ -f 'node_modules/.bin/next' ] && [ -f '.next/BUILD_ID' ]; then
          echo '✅ App already built and ready, starting...' &&
          npm start
        elif [ -f 'package.json' ] && [ -d 'node_modules' ]; then
          echo '🏗️ App installed but not built, building...' &&
          npm run build &&
          npm start
        else
          echo '📥 Fresh installation needed...' &&
          
          # Install system dependencies for native compilation
          echo '🔧 Installing system dependencies...' &&
          apk add --no-cache git python3 make g++ &&
          
          echo '📂 Downloading source code...' &&
          rm -rf /tmp/journaly &&
          git clone https://github.com/crypticbae/journaly.git /tmp/journaly &&
          
          # Clear current directory and copy source
          rm -rf ./* .[^.]* 2>/dev/null || true &&
          cp -r /tmp/journaly/* . &&
          cp -r /tmp/journaly/.[^.]* . 2>/dev/null || true &&
          rm -rf /tmp/journaly &&
          
          echo '📦 Installing Node packages...' &&
          npm ci --only=production &&
          
          echo '🗄️ Setting up database...' &&
          npx prisma generate &&
          npx prisma db push &&
          
          echo '🏗️ Building application...' &&
          npm run build &&
          
          echo '✅ Starting server on port 5885...' &&
          npm start
        fi
      "

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local
  app_data:
    driver: local

networks:
  journaly-network:
    driver: bridge 