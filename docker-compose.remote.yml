version: '3.8'

services:
  # PostgreSQL Database
  efx-postgres:
    image: postgres:15-alpine
    container_name: efx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: efx_user
      POSTGRES_PASSWORD: efx_secure_password_2024
      POSTGRES_DB: trading_journal
      PGDATA: /data/postgres
    volumes:
      - efx_postgres_data:/data/postgres
    networks:
      - efx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U efx_user -d trading_journal"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Journaly Trading Journal App (direkt von GitHub)
  journaly-app:
    image: node:18-alpine
    container_name: journaly-app
    restart: unless-stopped
    working_dir: /app
    ports:
      - "5885:5885"
    environment:
      # Database
      DATABASE_URL: "postgresql://efx_user:efx_secure_password_2024@efx-postgres:5432/trading_journal?schema=public"
      
      # NextAuth - ÄNDERE DIESE WERTE!
      NEXTAUTH_URL: "http://localhost:5885"
      NEXTAUTH_SECRET: "your-super-secret-jwt-key-change-this-in-production-please"
      
      # Email (Optional)
      EMAIL_SERVER_HOST: ""
      EMAIL_SERVER_PORT: "587"
      EMAIL_SERVER_USER: ""
      EMAIL_SERVER_PASSWORD: ""
      EMAIL_FROM: "noreply@tradingjournal.com"
      
      # Admin
      ADMIN_EMAIL: "admin@tradingjournal.com"
      
      # App Settings
      NODE_ENV: "production"
      APP_URL: "http://localhost:5885"
      PORT: "5885"
    networks:
      - efx-network
    depends_on:
      efx-postgres:
        condition: service_healthy
    volumes:
      # Für persistente Uploads
      - efx_uploads:/app/uploads
    command: >
      sh -c "
        apk add --no-cache git &&
        git clone https://github.com/crypticbae/journaly.git . &&
        echo '{\"compilerOptions\":{\"paths\":{\"@/*\":[\"./src/*\"]}}}' > tsconfig.json &&
        npm ci &&
        npx prisma generate &&
        npx prisma db push &&
        npm run build &&
        npm start
      "

volumes:
  efx_postgres_data:
    driver: local
  efx_uploads:
    driver: local

networks:
  efx-network:
    driver: bridge 